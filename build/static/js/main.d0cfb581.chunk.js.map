{"version":3,"sources":["components/ContactList.js","components/Filter.js","components/NewContact.js","services/numbers.js","components/Notifications.js","App.js","index.js"],"names":["ContactList","filterBy","persons","filteredPersons","handleDelete","length","map","person","key","name","number","className","onClick","id","setFilterBy","setFilteredPersons","type","value","onChange","e","filteredArray","filter","toLowerCase","includes","target","addContact","newName","setNewName","newNumber","setNewNumber","onSubmit","baseURL","axios","get","then","response","data","newObject","post","delete","put","errorMessage","successMessage","App","useState","setPersons","setErrorMessage","setSuccessMessage","useEffect","numberService","initialNumbers","Notifications","Filter","NewContact","find","window","confirm","preventDefault","updatedPerson","updatedContact","returnedPerson","catch","error","setTimeout","returnedNumber","concat","res","updatedNumbers","ReactDOM","render","document","getElementById"],"mappings":"0NAmCeA,EAjCK,SAAC,GAKd,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,aAEA,OACE,4BACIH,EAYEA,GAAYE,EAAgBE,OAAS,EACvCF,EAAgBG,KAAI,SAAAC,GAAM,OACxB,wBAAIC,IAAKD,EAAOE,MACbF,EAAOE,KADV,IACiBF,EAAOG,WAI1B,6DAlBAR,EAAQI,KAAI,SAAAC,GAAM,OAChB,wBAAIC,IAAKD,EAAOE,MACbF,EAAOE,KADV,IACiBF,EAAOG,OACtB,4BACEC,UAAU,kBACVC,QAAS,kBAAMR,EAAaG,EAAOM,MAFrC,gBCZG,cAKR,IAJLZ,EAII,EAJJA,SACAa,EAGI,EAHJA,YACAZ,EAEI,EAFJA,QACAa,EACI,EADJA,mBASA,OACE,yBAAKJ,UAAU,UACb,kDAEE,2BAAOK,KAAK,OAAOC,MAAOhB,EAAUiB,SAXrB,SAAAC,GACnB,IAAMC,EAAgBlB,EAAQmB,QAAO,SAAAd,GAAM,OACzCA,EAAOE,KAAKa,cAAcC,SAASJ,EAAEK,OAAOP,MAAMK,kBAEpDR,EAAYK,EAAEK,OAAOP,OACrBF,EAAmBK,SCXR,cAMR,IALLK,EAKI,EALJA,WACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,aAEA,OACE,0BAAMC,SAAUL,GACd,+BACE,+BACE,4BACE,qCACA,4BACG,IACD,2BACET,KAAK,OACLC,MAAOS,EACPR,SAAU,SAAAC,GAAC,OAAIQ,EAAWR,EAAEK,OAAOP,YAIzC,4BACE,uCACA,4BACE,2BACED,KAAK,OACLC,MAAOW,EACPV,SAAU,SAAAC,GAAC,OAAIU,EAAaV,EAAEK,OAAOP,YAI3C,4BACE,4BACE,4BAAQD,KAAK,UAAb,QAEF,kC,gBCrCNe,EAAU,eAyBD,EArBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB5B,EAhBA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc5B,EAXA,SAAAvB,GAEb,OADgBmB,IAAMO,OAAOR,EAAU,IAAMlB,GAC9BqB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS5B,EANA,SAACvB,EAAIwB,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBlB,GAAMwB,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCpB5B,cAAuC,IAApCK,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eAC9B,OACE,yBAAK/B,UAAU,yBACZ+B,GACC,yBAAK/B,UAAU,wBAAwB+B,GAExCD,GACC,yBAAK9B,UAAU,sBAAsB8B,KCqI9BE,EAvIH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACT1C,EADS,KACA2C,EADA,OAEcD,mBAAS,IAFvB,mBAETlB,EAFS,KAEAC,EAFA,OAGkBiB,mBAAS,IAH3B,mBAGThB,EAHS,KAGEC,EAHF,OAIgBe,mBAAS,IAJzB,mBAIT3C,EAJS,KAICa,EAJD,OAK8B8B,mBAAS,IALvC,mBAKTzC,EALS,KAKQY,EALR,OAMwB6B,mBAAS,MANjC,mBAMTH,EANS,KAMKK,EANL,OAO4BF,mBAAS,MAPrC,mBAOTF,EAPS,KAOOK,EAPP,KAShBC,qBAAU,WACRC,IAAuBf,MAAK,SAAAgB,GAC1BL,EAAWK,QAEZ,IAqFH,OACE,oCACE,wBAAIvC,UAAU,gBAAd,SACQ,oCADR,KAGA,kBAACwC,EAAD,CACEV,aAAcA,EACdC,eAAgBA,IAElB,kBAACU,EAAD,CACEnD,SAAUA,EACVa,YAAaA,EACbZ,QAASA,EACTa,mBAAoBA,EACpB2B,eAAgBA,EAChBD,aAAcA,IAEhB,yBAAK9B,UAAU,aACb,kBAAC0C,EAAD,CACE5B,WAtGW,SAAAN,GACjB,GAAIjB,EAAQoD,MAAK,SAAA/C,GAAM,OAAIA,EAAOE,OAASiB,KAAU,CACnD,IACG6B,OAAOC,QAAP,UACI9B,EADJ,2EAOD,OAHAP,EAAEsC,iBACF9B,EAAW,SACXE,EAAa,IAGb,IAAM6B,EAAgBxD,EAAQoD,MAC5B,SAAA/C,GAAM,OAAIA,EAAOE,OAASiB,KAEtBiC,EAAc,2BACfD,GADe,IAElBhD,OAAQkB,IAEFf,EAAO8C,EAAP9C,GACRoC,EACUpC,EAAI8C,GACXzB,MAAK,SAAA0B,GACJf,EACE3C,EAAQI,KAAI,SAAAC,GAAM,OAChBA,EAAOM,KAAOA,EAAKN,EAASqD,SAIjCC,OAAM,SAAAC,GACLhB,EAAgB,kBAAD,OACKpB,EADL,6CAInBP,EAAEsC,iBACF9B,EAAW,IACXE,EAAa,IACbkC,YAAW,WACTjB,EAAgB,QACf,KACHG,IAAuBf,MAAK,SAAAgB,GAC1BL,EAAWK,UAIV,CACL/B,EAAEsC,iBAKFR,EAJyB,CACvBxC,KAAMiB,EACNhB,OAAQkB,IAE6BM,MAAK,SAAA8B,GAC1CnB,EAAW3C,EAAQ+D,OAAOD,IAC1BjB,EAAkB,SAAD,OAAUiB,EAAevD,OAC1CsD,YAAW,WACThB,EAAkB,QACjB,KACHpB,EAAW,IACXE,EAAa,SA6CXH,QAASA,EACTE,UAAWA,EACXD,WAAYA,EACZE,aAAcA,IAEhB,uCACA,kBAAC,EAAD,CACE5B,SAAUA,EACVC,QAASA,EACTC,gBAAiBA,EACjBC,aAlDc,SAAAS,GAAO,IACnBJ,EAASP,EAAQoD,MAAK,SAAA/C,GAAM,OAAIA,EAAOM,KAAOA,KAA9CJ,KAEL8C,OAAOC,QAAP,mDAA2D3C,EAA3D,OAKDoC,EAAqBpC,GAAIqB,MAAK,SAAAgC,GAC5BjB,IAAuBf,MAAK,SAAAiC,GAC1BtB,EAAWsB,GACXpB,EAAkB,WAAD,OAAYtC,IAC7BsD,YAAW,WACThB,EAAkB,QACjB,iB,MC9FbqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d0cfb581.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ContactList = ({\r\n  filterBy,\r\n  persons,\r\n  filteredPersons,\r\n  handleDelete,\r\n}) => {\r\n  return (\r\n    <ul>\r\n      {!filterBy ? (\r\n        persons.map(person => (\r\n          <li key={person.name}>\r\n            {person.name} {person.number}\r\n            <button\r\n              className=\"button-sm--grey\"\r\n              onClick={() => handleDelete(person.id)}\r\n            >\r\n              delete\r\n            </button>\r\n          </li>\r\n        ))\r\n      ) : filterBy && filteredPersons.length > 0 ? (\r\n        filteredPersons.map(person => (\r\n          <li key={person.name}>\r\n            {person.name} {person.number}\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <li>No contacts match your search</li>\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ContactList\r\n","import React from 'react'\r\n\r\nexport default ({\r\n  filterBy,\r\n  setFilterBy,\r\n  persons,\r\n  setFilteredPersons,\r\n}) => {\r\n  const handleSearch = e => {\r\n    const filteredArray = persons.filter(person =>\r\n      person.name.toLowerCase().includes(e.target.value.toLowerCase()),\r\n    )\r\n    setFilterBy(e.target.value)\r\n    setFilteredPersons(filteredArray)\r\n  }\r\n  return (\r\n    <div className=\"filter\">\r\n      <div>\r\n        filter shown with:\r\n        <input type=\"text\" value={filterBy} onChange={handleSearch} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({\r\n  addContact,\r\n  newName,\r\n  setNewName,\r\n  newNumber,\r\n  setNewNumber,\r\n}) => {\r\n  return (\r\n    <form onSubmit={addContact}>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>name:</td>\r\n            <td>\r\n              {' '}\r\n              <input\r\n                type=\"text\"\r\n                value={newName}\r\n                onChange={e => setNewName(e.target.value)}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>number:</td>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                value={newNumber}\r\n                onChange={e => setNewNumber(e.target.value)}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <button type=\"submit\">add</button>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nconst baseURL = '/api/persons'\r\n\r\n// extracted request methods take the http request object return response data\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseURL)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseURL, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(baseURL + '/' + id)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseURL}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n// import as noteService object with these properties on it\r\nexport default { getAll, create, remove, update }\r\n","import React from 'react'\r\n\r\nexport default ({ errorMessage, successMessage }) => {\r\n  return (\r\n    <div className=\"notifications-wrapper\">\r\n      {successMessage && (\r\n        <div className=\"notification-success\">{successMessage}</div>\r\n      )}\r\n      {errorMessage && (\r\n        <div className=\"notification-error\">{errorMessage}</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\nimport NewContact from './components/NewContact'\nimport numberService from './services/numbers'\nimport Notifications from './components/Notifications'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterBy, setFilterBy] = useState('')\n  const [filteredPersons, setFilteredPersons] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n\n  useEffect(() => {\n    numberService.getAll().then(initialNumbers => {\n      setPersons(initialNumbers)\n    })\n  }, [])\n\n  const addContact = e => {\n    if (persons.find(person => person.name === newName)) {\n      if (\n        !window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`,\n        )\n      ) {\n        e.preventDefault()\n        setNewName('')\n        setNewNumber('')\n        return\n      } else {\n        const updatedPerson = persons.find(\n          person => person.name === newName,\n        )\n        const updatedContact = {\n          ...updatedPerson,\n          number: newNumber,\n        }\n        const { id } = updatedContact\n        numberService\n          .update(id, updatedContact)\n          .then(returnedPerson => {\n            setPersons(\n              persons.map(person =>\n                person.id !== id ? person : returnedPerson,\n              ),\n            )\n          })\n          .catch(error => {\n            setErrorMessage(\n              `Information of ${newName} has already been removed from server`,\n            )\n          })\n        e.preventDefault()\n        setNewName('')\n        setNewNumber('')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        numberService.getAll().then(initialNumbers => {\n          setPersons(initialNumbers)\n        })\n      }\n      // person doesn't exist in phonebook - create new contact\n    } else {\n      e.preventDefault()\n      const newContactObject = {\n        name: newName,\n        number: newNumber,\n      }\n      numberService.create(newContactObject).then(returnedNumber => {\n        setPersons(persons.concat(returnedNumber))\n        setSuccessMessage(`Added ${returnedNumber.name}`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      })\n    }\n  }\n\n  const deleteContact = id => {\n    const { name } = persons.find(person => person.id === id)\n    if (\n      !window.confirm(`Do you really want to delete message id# ${id}?`)\n    ) {\n      return\n    } else {\n      // response from axios delete is just a status code - no data is sent with request\n      numberService.remove(id).then(res => {\n        numberService.getAll().then(updatedNumbers => {\n          setPersons(updatedNumbers)\n          setSuccessMessage(`Removed ${name}`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n      })\n    }\n  }\n\n  return (\n    <>\n      <h1 className=\"header-brand\">\n        Phoneb<span>oo</span>k\n      </h1>\n      <Notifications\n        errorMessage={errorMessage}\n        successMessage={successMessage}\n      />\n      <Filter\n        filterBy={filterBy}\n        setFilterBy={setFilterBy}\n        persons={persons}\n        setFilteredPersons={setFilteredPersons}\n        successMessage={successMessage}\n        errorMessage={errorMessage}\n      />\n      <div className=\"container\">\n        <NewContact\n          addContact={addContact}\n          newName={newName}\n          newNumber={newNumber}\n          setNewName={setNewName}\n          setNewNumber={setNewNumber}\n        />\n        <h2>Numbers</h2>\n        <ContactList\n          filterBy={filterBy}\n          persons={persons}\n          filteredPersons={filteredPersons}\n          handleDelete={deleteContact}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}